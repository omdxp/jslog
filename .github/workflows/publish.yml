name: Publish to NPM

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run typecheck
      run: npm run typecheck

    - name: Run tests
      run: |
        npm test
        npm run test:advanced
        timeout 10 npm run test:beast || true

  publish:
    needs: test
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        registry-url: 'https://registry.npmjs.org'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build
      run: npm run build

    - name: Check version match
      run: |
        PACKAGE_VERSION=$(node -p "require('./package.json').version")
        TAG_VERSION=${GITHUB_REF#refs/tags/v}
        echo "Package version: $PACKAGE_VERSION"
        echo "Tag version: $TAG_VERSION"
        if [ "$PACKAGE_VERSION" != "$TAG_VERSION" ]; then
          echo "Version mismatch! package.json ($PACKAGE_VERSION) != tag ($TAG_VERSION)"
          exit 1
        fi
        echo "Version match confirmed!"

    - name: Publish to NPM
      run: npm publish --provenance --access public
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ github.ref_name }}
        name: Release ${{ github.ref_name }}
        body: |
          ## Release ${{ github.ref_name }}
          
          Published to npm: https://www.npmjs.com/package/@omdxp/jslog
        draft: false
        prerelease: false
        token: ${{ secrets.GITHUB_TOKEN }}
